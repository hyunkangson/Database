ER 관계 사상에 의한 관계 데이터베이스 설계

 
정규 엔티티 타입의 변환 

엔티티 타입은 릴레이션(테이블)로 맵핑한다.

모든 단순 애트리뷰트를 포함시킨다.

복합 애트리뷰트는 해당 애트리뷰트 대신 하위의 애트리뷰트들을 포함시킨다.

엔티티 타입의 키 중 하나를 릴레이션의 기본키로 지정한다.

 
약한 엔티티 타입의 변환

스스로 존재하지 못하고 식별 엔티티나 식별 관계 타입을 요하는 약한 엔티티 타입은 릴레이션으로 일단 매핑한다.

그리고 모든 단순 애트리뷰트를 포함시킨다.

이러한 릴레이션에 속한 튜플들이 같은 값을 갖아 구분이 힘든 경우가 있기에 식별 관계 타입 혹은 엔티티 타입의 키를 가져와 애트리뷰트에 넣고 약한 엔티티 타입의 부분키와 합쳐 기본키로서 만든다.

 
1:1 관계 타입의 변환

(외래키 접근 방식)

1:1관계에 속한 한 릴레이션(s)을 선택하여 t의 기본키를 s에 외래키로 포함한다.

s는 전체 참여 릴레이션을 선택하는 것이 좋다.

관계 타입의 모든 단순 애트리뷰트를 s에 포함시킨다.

(관계 릴레이션 접근 방식)

s와 t를 교차 참조하는 새로운 릴레이션 r을 생성

- 데이터 베이스의 오버헤드를 줄이기 위해 잘 사용하지 않는다.

 
1:N 관계 타입의 변환

(외래키 접근 방식)

1측 릴레이션 t의 기본키를 n측 릴레이션 s에 외래키로 포함, 관계타입의 몯느 단순 애트리뷰트를 s에 포함시킨다.

(관계 릴레이션 접근 방식)

s와 t를 교차 참조하는 새로운 릴레이션 r을 생성

- 데이터 베이스의 오버헤드를 줄이기 위해 잘 사용하지 않는다.

 
M:N 관계 타입의 변환

별도의 관계 릴레이션을 생성하고 두 릴레이션의 기본 키를 각각 참조하는 외래키로 애트리뷰트를 구성한다.

이 때 두 외래키가 관계 릴레이션의 키본키를 형성한다.

 
다치 애트리뷰트의 변환

관계형 데이터 베이스에서는 한 애트리뷰트에 여러 값을 넣을 수 없다. 여기서 다치 애트리뷰트를 갖는 릴레이션에 애트리뷰트를 수 만큼 계속해서 넣는다면 바람직하지 않다.

이에 별도의 릴레이션을 만들고 다치 애트리뷰트와 해당 요소의 키를 합쳐 기본키로서 만들어준다.

 
N차 관계 타입의 변환


별도로 관계타입을 릴레이션으로 만들어 참여하는 애트리뷰트로서 넣어주고 해당 n개의 애트리뷰트들을 합쳐 기본키로 만들어준다.
