
3단계 구조의 데이터베이스에서 외부단계, 테이블을 직접 보는게 아닌 각각의 사용자 별로 쉬운 사용과 접근 가능 여부를 구분하기 위해 사용한다.  뷰는 다른 테이블에서 유도된 일종의 가상의 테이블



뷰를 사용

- 각 사용자 별로 피료한 데이터만 보여준다.(나머지 데이터는 감추어준다.)

- 질의를 보다 쉽게 만들 수 있다. (쿼리의 결과를 뷰로써 만들기에 이미 쿼리를 한번 수행해서 간단한 SELECT로 값을 찾을 수 있다.)

- 데이터 베이스 접근에 모듈화를 제공



사용자 입장에서 뷰는 일반 테이블과 같이 사용하면 된다.

하지만 갱신 연산(INSERT, UPDATE, DELETE)를 할 때는 가상의 테이블이기에 불가능한 경우가 많다.

- 두개의 테이블을 조인해서 뷰를 만들었을 경우 갱신 연산으로 인한 변경을 기존의 테이블에 적용하기 어렵다.



문법: CREATE VIEW view_name AS <query>



뷰의 삭제: DROP을 사용해서 제거

DROP VIEW view_name;



갱신할 수 없는 뷰

- 그룹화(group by)와 집단함수(avg, count ...)를 사용하여 정의된 뷰는 갱신할 수 없다.

- 다수의 테이블을 조인하여 정의한 뷰



SQL의 기타 기능

권한 기능: 테이블 자체에 사용자 별로 접근에 대한 권한을 부여하고 취소하는 기능을 한다.

호스트 언어와 결합되어 사용: 일반적인 프로그래밍 언어안에서 SQL을 불러서 데이터베이스 접근이 가능하다.

트랜잭션 기능

기타 유용한 명령어: 어떤 애트리뷰트를 인덱스로 삼아 디스크에 배치 할지 등을 데이터베이스에 명시한다.

