Relation data model and Relation database Constraints

 
관계 모델의 개념

 
db설계 단계

컴퓨터상에서 er 모델을 표현하거나 구현하는 것이 어렵기에 er모델과 같이 개념적으로 설계된 모델을 구현 데이터 모델로 변환하는 논리적 설계를 통하여 사용한다. 이에 논리적 설계에서 가장 많이 사용되는 것이 관계형 데이터 모델이다.

 
관계 모델의 개념

DB2, Oracle, SQL Server, Access, MySQL, SQLite와 같은 DBMS가 이에 속한다.

데이터를 관계(Relation)들의 집합으로서 나타낸다. ER모델(Entity Relationship)으로써 같은 것이 아니다.

관계란 사실상 테이블이고 이러한 테이블을 릴레이션이라 주로 부르며 테이블의 행은 투플, 열은 애트리뷰트라 부른다.

 
 
관계 모델의 용어

 
도메인

애트리뷰트가 가질 수 있는 값들의 집합, 범위

ex) names: 이름들의 집합

employ_ages: 15~80 사이의 사원들의 나이

각 도메인을 위해 데이터 타입 또는 포맷을 명시하기도 한다.

 
NULL값

애트리뷰트에 넣을 수 있는 값 중 특이한 값(NULL을 애트리뷰트에 넣는 것은 2가지 경우가 있다)

1. 적용할 수 없을 때

ex) 아파트 번호를 넣어야 하는데 단독 주택인 경우 적용할 수 없다.

출신 대학을 넣어야 하나 대학을 나오지 않으면 넣을 수 없다.

2. 값을 넣어야 하나 알 수 없을 때

ex) 핸드폰 번호를 넣어야 하나 대상의 핸드폰 번호를 알지 못하는 경우

 
릴레이션 스키마

테이블에서 테이블마다 이름 R을 갖고 각 릴레이션은 애트리뷰트(A_i)들을 갖는다.

릴레이션의 차수: 릴레이션의 애트리뷰트 갯수

ex) STUDENT(Name SSN, BirthDate, Address) -> 릴레이션의 차수: 4

도메인의 표현 dom(A_i) = integer

 
릴레이션 스키마의 투플 t

n개 값들이 순서 리스트 t=<v_1, v_2, ,,, , v_n>

각 v_i는 dom(A_i)의 원소, 또는 NULL

 
릴레이션 스키마 R에 대한 릴레이션 상태 또는 릴레이션 인스턴스라 한다.( r 또는 r(R))

릴레이션 인스턴스 r(R)은 특정 시점의 상태

 
 
관계 모델의 특성

릴레이션은 투플들의 집합으로 정의되며 집합에서 원소의 순서가 무의미한 것과 마찬가지로 투플의 순서 역시 의미가 없다.

투플 내에서의 애트리뷰트 값들은 릴레이션 스키마에 정의된 순서에 매칭이 되도록 맞춰주어야 한다.

투플 내의 각 값은 더 쪼갤 수 없는 값들이다.

er모델에서의 다치 애트리뷰트나 복합 애트리뷰트는 관계모델에서는 허용되지 않는다.

값을 알 수 없거나 해당되는 값이 없을 때는 NULL이라는 특수 값을 사용한다.

 
 
관계 모델의 표기법

차수가 n인 스키마 R은 R(A_1, A_2, ,,, , A_n)으로 표기

대문자 Q, R, S등은 릴레이션의 이름을 나타낸다.

소문자 q, r, s등은 릴레이션 상태를 나타낸다.

릴레이션 r(R)의 투플 t는 t=<v_1, v_2, ,,, , v_n>으로 표기, 여기서 v_i는 애트리뷰트 A_i의 값

상태 또는 인스턴스 s={t1, t2, ,,,}

 
서로 다른 릴레이션에서 동인한 이름의 애트리뷰트를 사용할 수 있으며 이를 구분하기 위해 애트리뷰트 이름 앞에 릴레이션의 이름을 붙여 서로를 구분한다.

ex) STUDENT.NAME

 
 
관계 모델의 제약조건

모든 릴레이션의 인스턴스들이 만족해야하는 조건이다.

(한개의 테이블 내의 값들에서의 제약 조건)

1) 도메인 제약 조건

2) 키 제약 조건

3) 널에 대한 제약 조건

(몇개의 테이블 사이의 관계의 제약 조건)

4) 엔티티 무결성 제약조건

5) 참조 무결성 제약조건

 
도메인 제약 조건

각 애트리뷰트 A의 값은 반드시 A의 도메인에 속하는 원자값(쪼갤 수 없는 값)이어야 한다.

도메인과 관련된 데이터 타입

정수, 실수와 같은 표준 숫자형, 문자, 문자열, 날짜, 시간, 화폐 단위 등



키 제약조건

릴레이션은 투플의 집합이며 모든 원소들은 중복이 되서는 안된다.

슈퍼키: 애트리뷰트들의 집합이며 어떠한 투플도 동일한 애트리뷰트를 갖지 않는다.

키: 슈퍼키에서 특정 애트리뷰트를 제거햇을 때 슈퍼키가 될 수 없는 애트리뷰트

key is subset of superkey

 
기본 키

일반적으로 릴레이션은 여러 키를 가질 수 있는데 이들을 후보키라 하며 이러한 후보키중 에서 하나를 정하여 디폴트로 사용하는 것을 기본키라 한다.

기본키를 구성하는 애트리뷰트를 밑줄로 표시한다.

기본키를 지정하는 이유는 해당 키를 중심으로 빠른 접근을 하기 위해 dbms가 최적화한다.

 
null에대한 제약조건

null이 되서는 안되는 애트리뷰트는 NOT NULL을 통해 지정한다.

 
 
관계 데이터베이스와 스키마

데이터 베이스에 속하는 릴레이션 스키마들의 집합과 무결성 제약 조건(릴레이션 사이에서 발생)의 집합으로 정의된다.

릴레이션들의 상태 집합을 데이터베이스 상태라 한다.

 
 
관계 데이터 베이스의 무결성 제약조건

관계 데이터베이스 스키마 = 관계 스키마 집합 + 무결성제약조건

무결성 제약조건

- 엔티티 무결성 제약조건

- 참조 무결성 제약조건

 
엔티티 무결성 제약조건

릴레이션들은 키를 갖고 있는데 키값중 기본키는 절대 NULL값을 가질 수 없다.

- 투플과 투플을 구분할 수 있는 능력을 잃기 때문

이에 릴레이션 속성을 정의할 때 NOT NULL임을 명시해야 한다.

 
참조 무결성 제약조건

한 릴레이션에서 있는 투플이 다른 릴레이션에 있는 투플을 참조하려면 반드시 참조되는 투플이 그 릴레이션 내에 존재해야 한다.

하나의 릴레이션에서 속성의 값으로 다른 릴레이션의 기본키를 참조하는 경우 해당 속성은 릴레이션의 외래키라 하며 NULL값을 가져도 된다.

만약 외래키가 다른 릴레이션의 해당 값을 참조하러 갔을 때 외래키에 해당하는 값이 없다면 무결성이 깨지고 데이터 베이스에 문제가 있음을 의미한다.

다른 제약조건과 달리 참조 무결성은 두릴레이션에 대한 제약조건이다.

 
